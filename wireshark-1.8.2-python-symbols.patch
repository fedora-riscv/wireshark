tshark / wireshark shows
"/lib64/libwireshark.so.2: undefined symbol: py_create_dissector_handle"
on startup. This patch ensures that the python symbols are compiled in.

diff -up wireshark-1.8.2/epan/Makefile.am.orig wireshark-1.8.2/epan/Makefile.am
--- wireshark-1.8.2/epan/Makefile.am.orig	2012-08-29 09:39:06.860107175 +0200
+++ wireshark-1.8.2/epan/Makefile.am	2012-08-29 09:39:11.311137553 +0200
@@ -195,7 +195,7 @@ if !HAVE_PLUGINS
 def_sym_filter_symbols += /^register_all_wiretap_modules/ || /^register_all_plugin_tap_listeners/ || /^plugin_list/ {next;};
 endif
 
-if HAVE_LIBPY
+if !HAVE_LIBPY
 # If we're not building python, these symbols don't get built.
 # Keep them out of the symbol list.
 def_sym_filter_symbols += /^py_create_dissector_handle/ || /^py_dissector_args/  {next;};
diff -up wireshark-1.8.2/epan/libwireshark.def.old wireshark-1.8.2/epan/libwireshark.def
--- wireshark-1.8.2/epan/libwireshark.def.old	2012-08-29 10:15:28.136123323 +0200
+++ wireshark-1.8.2/epan/libwireshark.def	2012-08-29 10:18:28.905483905 +0200
@@ -1248,3 +1248,9 @@ xml_escape
 xml_get_attrib
 xml_get_cdata
 xml_get_tag
+py_create_dissector_handle
+py_dissector_args
+hf_register_info_add
+hf_register_info_create
+hf_register_info_destroy
+
